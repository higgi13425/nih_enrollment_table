#  create empty table -----------------------------------------------------
l <- list(race =
c("White",
"Black or African-American",
"Asian",
"Native Hawaiian or Other Pacific Islander",
"American Indian or Alaska Native",
"More Than One Race",
"Unknown or Not Reported"),
sex = c("Male",
"Female",
"Unknown or Not Reported Sex",
"Male",
"Female",
"Male",
"Female"),
ethnicity = c("Hispanic",
"Not",
"Unknown",
"Hispanic",
"Not",
"Hispanic",
"Not"),
count = rep(0,7))
empty_table <- as_tibble(l) %>%
tidyr::complete(race,
nesting(sex), nesting(ethnicity),fill=list(count = 0))
# anti-join ibd_table2 ----------------------------------------------------
# now anti-join ibd_table2 with empty_table to get missing rows
# with no counts in our sample
complement <- anti_join(empty_table, ibd_table2, by = c('race', 'sex', "ethnicity")) %>%
print(n=Inf)
# now combine complement with ibd_table2
full_table <- bind_rows(ibd_table2, complement)
# take full table, unite, then spread
ibd_table <- full_table %>%
unite(col = "eth.sex", c('ethnicity', "sex"), sep=".") %>%
spread(key = eth.sex, value = count)
# add margin totals -------------------------------------------------------
# convert race col to rownames to make numbers into a matrix
m <- as.matrix(ibd_table[ ,-1])
rownames(m) <- ibd_table$race
ibd_table2 <- addmargins(m, FUN=c(Total=sum), quiet = T)
ibd_table <- rownames_to_column(as.data.frame(ibd_table2), "Racial Categories")
#arrange without total
ibd_table3 <- ibd_table[1:7,] %>% arrange(`Racial Categories`)
ibd_table <- as.data.frame(rbind(ibd_table3, ibd_table[8,]))
View(ibd_table)
?keyring
??keyring
library(keyring)
install.packages('keyring')
key_list()
library(keyring)
key_list()
dim(key_list())
names(key_list())
keyring::key_get(
service = "REDCap IBD Database API Token",
username = "REDCap IBD Database API Token")
# Load libraries ----------------------------------------------------------
library(tidyverse)
library(janitor)
library(flextable)
library(here)
library(writexl)
library(magrittr)
library(knitr)
library(rmarkdown)
library(officer)
# read and clean data ---------------------------------------------------------------
ibd <- read_csv("IBDDatabank2015_DATA_2018-06-29_0901.csv")
ibd %>%
filter(redcap_event_name == "baseline_visit_arm_1") %>%
select(sex, race___0:ethnicity) %>%
mutate(race  =  case_when(
.$race___0 == 1 ~ "White",
.$race___1 == 1 ~ "Black or African-American",
.$race___2 == 1 ~ "Asian",
.$race___3 == 1 ~ "Native Hawaiian or Other Pacific Islander",
.$race___4 == 1 ~ "American Indian or Alaska Native",
.$race___5 == 1 ~ "More Than One Race",
.$race___999 == 1 ~ "Unknown or Not Reported",
TRUE ~ "Unknown or Not Reported")) %>%
select(sex, race, ethnicity) %>%
mutate(ethnic_cat = case_when(
.$ethnicity == 1 ~ "Hispanic or Latino",
.$ethnicity == 0 ~ "Not Hispanic or Latino",
TRUE ~ "Unknown or Not Reported Ethnicity")) %>%
select(sex, race, ethnic_cat) %>%
mutate(sex2 = case_when(
.$sex == 1 ~ "Male",
.$sex == 0 ~ "Female",
TRUE ~ "Female")) %>%
select(sex2, race, ethnic_cat) ->
ibd
# create table of counts ----------------------------------------------
ibd_table <- ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race") %>%
rename('Female.Unknown' = Female,
'Male.Unknown' = Male,
'Female.Not' = Female.y,
'Male.Not' = Male.y,
'Female.Hispanic' = Female.x,
'Male.Hispanic' = Male.x)
# filter to only non-zero categories ---------------------
ibd_table2 <- gather(ibd_table, key= sex.eth, value = count, -race) %>%
separate(sex.eth, into = c('sex', 'ethnicity')) %>%
filter(count != 0)
#  create empty table -----------------------------------------------------
l <- list(race =
c("White",
"Black or African-American",
"Asian",
"Native Hawaiian or Other Pacific Islander",
"American Indian or Alaska Native",
"More Than One Race",
"Unknown or Not Reported"),
sex = c("Male",
"Female",
"Unknown or Not Reported Sex",
"Male",
"Female",
"Male",
"Female"),
ethnicity = c("Hispanic",
"Not",
"Unknown",
"Hispanic",
"Not",
"Hispanic",
"Not"),
count = rep(0,7))
empty_table <- as_tibble(l) %>%
tidyr::complete(race,
nesting(sex), nesting(ethnicity),fill=list(count = 0))
# anti-join ibd_table2 ----------------------------------------------------
# now anti-join ibd_table2 with empty_table to get missing rows
# with no counts in our sample
complement <- anti_join(empty_table, ibd_table2, by = c('race', 'sex', "ethnicity")) %>%
print(n=Inf)
# now combine complement with ibd_table2
full_table <- bind_rows(ibd_table2, complement)
View(full_table)
# Load libraries ----------------------------------------------------------
library(tidyverse)
library(janitor)
library(flextable)
library(magrittr)
# read and clean data ---------------------------------------------------------------
ibd <- read_csv("IBDDatabank2015_DATA_2018-06-29_0901.csv")
ibd %>%
filter(redcap_event_name == "baseline_visit_arm_1") %>%
select(sex, race___0:ethnicity) %>%
mutate(race  =  case_when(
.$race___0 == 1 ~ "White",
.$race___1 == 1 ~ "Black or African-American",
.$race___2 == 1 ~ "Asian",
.$race___3 == 1 ~ "Native Hawaiian or Other Pacific Islander",
.$race___4 == 1 ~ "American Indian or Alaska Native",
.$race___5 == 1 ~ "More Than One Race",
.$race___999 == 1 ~ "Unknown or Not Reported",
TRUE ~ "Unknown or Not Reported")) %>%
select(sex, race, ethnicity) %>%
mutate(ethnic_cat = case_when(
.$ethnicity == 1 ~ "Hispanic or Latino",
.$ethnicity == 0 ~ "Not Hispanic or Latino",
TRUE ~ "Unknown or Not Reported Ethnicity")) %>%
select(sex, race, ethnic_cat) %>%
mutate(sex2 = case_when(
.$sex == 1 ~ "Male",
.$sex == 0 ~ "Female",
TRUE ~ "Female")) %>%
select(sex2, race, ethnic_cat) ->
ibd
# create table of counts ----------------------------------------------
ibd_table <- ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race") %>%
rename('Female.Unknown' = Female,
'Male.Unknown' = Male,
'Female.Not' = Female.y,
'Male.Not' = Male.y,
'Female.Hispanic' = Female.x,
'Male.Hispanic' = Male.x)
# filter to only non-zero categories ---------------------
ibd_table2 <- gather(ibd_table, key= sex.eth, value = count, -race) %>%
separate(sex.eth, into = c('sex', 'ethnicity')) %>%
filter(count != 0)
#  create empty table -----------------------------------------------------
l <- list(race =
c("White",
"Black or African-American",
"Asian",
"Native Hawaiian or Other Pacific Islander",
"American Indian or Alaska Native",
"More Than One Race",
"Unknown or Not Reported"),
sex = c("Male",
"Female",
"Unknown or Not Reported Sex",
"Male",
"Female",
"Male",
"Female"),
ethnicity = c("Hispanic",
"Not",
"Unknown",
"Hispanic",
"Not",
"Hispanic",
"Not"),
count = rep(0,7))
empty_table <- as_tibble(l) %>%
tidyr::complete(race,
nesting(sex), nesting(ethnicity),fill=list(count = 0))
# anti-join ibd_table2 ----------------------------------------------------
# now anti-join ibd_table2 with empty_table to get missing rows
# with no counts in our sample
complement <- anti_join(empty_table, ibd_table2, by = c('race', 'sex', "ethnicity")) %>%
print(n=Inf)
# now combine complement with ibd_table2
full_table <- bind_rows(ibd_table2, complement)
# take full table, unite, then spread
ibd_table <- full_table %>%
unite(col = "eth.sex", c('ethnicity', "sex"), sep=".") %>%
spread(key = eth.sex, value = count)
# add margin totals -------------------------------------------------------
# convert race col to rownames to make numbers into a matrix
m <- as.matrix(ibd_table[ ,-1])
rownames(m) <- ibd_table$race
ibd_table2 <- addmargins(m, FUN=c(Total=sum), quiet = T)
ibd_table <- rownames_to_column(as.data.frame(ibd_table2), "Racial Categories")
#arrange without total
ibd_table3 <- ibd_table[1:7,] %>% arrange(`Racial Categories`)
ibd_table <- as.data.frame(rbind(ibd_table3, ibd_table[8,]))
write_xlsx(ibd_table, here("ibd_table.xlsx"))
# make flextable ----------------------------------------------------------
myft <- ibd_table %>%
regulartable() %>%
theme_booktabs() %>%
set_formatter_type(fmt_double = "%0.0f") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.female = "Hispanic or Latino",
Hispanic.male = "Hispanic or Latino",
`Hispanic.Unknown or Not Reported Sex` = "Hispanic or Latino",
Not.female = "Not Hispanic or Latino",
Not.male = "Not Hispanic or Latino",
`Not.Unknown or Not Reported Sex` = "Not Hispanic or Latino",
Unknown.female = "Unknown/Not Reported",
Unknown.male = "Unknown/Not Reported",
`Unknown.Unknown or Not Reported Sex` = "Unknown/Not Reported",
Total = "Total") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.female = "Ethnic Categories Divided by Sex",
Hispanic.male = "Ethnic Categories Divided by Sex",
`Hispanic.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Not.female = "Ethnic Categories Divided by Sex",
Not.male = "Ethnic Categories Divided by Sex",
`Not.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Unknown.female = "Ethnic Categories Divided by Sex",
Unknown.male = "Ethnic Categories Divided by Sex",
`Unknown.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Total = "Total") %>%
set_header_labels(`Racial Categories` = "Racial Categories",
Hispanic.female = "Female",
Hispanic.male = "Male",
`Hispanic.Unknown or Not Reported Sex` = "Unknown",
Not.female = "Female",
Not.male = "Male",
`Not.Unknown or Not Reported Sex` = "Unknown",
Unknown.female = "Female",
Unknown.male = "Male",
`Unknown.Unknown or Not Reported Sex` = "Unknown",
Total = "Total") %>%
font(fontname = "Arial") %>%
fontsize(size = 10) %>%
fontsize(size=12, part="header") %>%
merge_h(part= "header") %>%
merge_v(part= "header") %>%
align(align = "center", part = "all") %>%
width(j = 1, width = 2.0)
myft
# save as word document ---------------------------------------------------
doc <- read_docx()
doc <- body_add_flextable(doc, value = myft)
print(doc, target = "/Users/peterhiggins/Documents/Rcode/nih_enrollment_table/word_table.docx")
# save as ppt slide -------------------------------------------------------
ppt <- read_pptx()
ppt <- add_slide(ppt, layout = "Title and Content",
master = "Office Theme")
ppt <- ph_with_flextable(ppt, value = myft, type= "body")
print(ppt, target = "/Users/peterhiggins/Documents/Rcode/nih_enrollment_table/ppt_slide.pptx")
sessionInfo()
# Load libraries ----------------------------------------------------------
library(tidyverse)
library(janitor)
library(flextable)
library(magrittr)
# read and clean data ---------------------------------------------------------------
ibd <- read_csv("IBDDatabank2015_DATA_2018-06-29_0901.csv")
ibd %>%
filter(redcap_event_name == "baseline_visit_arm_1") %>%
select(sex, race___0:ethnicity) %>%
mutate(race  =  case_when(
.$race___0 == 1 ~ "White",
.$race___1 == 1 ~ "Black or African-American",
.$race___2 == 1 ~ "Asian",
.$race___3 == 1 ~ "Native Hawaiian or Other Pacific Islander",
.$race___4 == 1 ~ "American Indian or Alaska Native",
.$race___5 == 1 ~ "More Than One Race",
.$race___999 == 1 ~ "Unknown or Not Reported",
TRUE ~ "Unknown or Not Reported")) %>%
select(sex, race, ethnicity) %>%
mutate(ethnic_cat = case_when(
.$ethnicity == 1 ~ "Hispanic or Latino",
.$ethnicity == 0 ~ "Not Hispanic or Latino",
TRUE ~ "Unknown or Not Reported Ethnicity")) %>%
select(sex, race, ethnic_cat) %>%
mutate(sex2 = case_when(
.$sex == 1 ~ "Male",
.$sex == 0 ~ "Female",
TRUE ~ "Female")) %>%
select(sex2, race, ethnic_cat) ->
ibd
# create table of counts ----------------------------------------------
View(ibd)
ibd %>%
tabyl(race, sex2)
ibd %>%
tabyl(race, sex2, ethnic_cat)
ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race")
ibd_table <- ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race") %>%
rename('Female.Unknown' = Female,
'Male.Unknown' = Male,
'Female.Not' = Female.y,
'Male.Not' = Male.y,
'Female.Hispanic' = Female.x,
'Male.Hispanic' = Male.x)
View(ibd_table)
ibd_table2 <- gather(ibd_table, key= sex.eth, value = count, -race) %>%
separate(sex.eth, into = c('sex', 'ethnicity')) %>%
filter(count != 0)
View(ibd_table2)
View(complement)
# Load libraries ----------------------------------------------------------
library(tidyverse)
library(janitor)
library(flextable)
library(magrittr)
library(writexl)
library(here)
# read and clean data ---------------------------------------------------------------
ibd <- read_csv("IBDDatabank2015_DATA_2018-06-29_0901.csv")
ibd %>%
filter(redcap_event_name == "baseline_visit_arm_1") %>%
select(sex, race___0:ethnicity) %>%
mutate(race  =  case_when(
.$race___0 == 1 ~ "White",
.$race___1 == 1 ~ "Black or African-American",
.$race___2 == 1 ~ "Asian",
.$race___3 == 1 ~ "Native Hawaiian or Other Pacific Islander",
.$race___4 == 1 ~ "American Indian or Alaska Native",
.$race___5 == 1 ~ "More Than One Race",
.$race___999 == 1 ~ "Unknown or Not Reported",
TRUE ~ "Unknown or Not Reported")) %>%
select(sex, race, ethnicity) %>%
mutate(ethnic_cat = case_when(
.$ethnicity == 1 ~ "Hispanic or Latino",
.$ethnicity == 0 ~ "Not Hispanic or Latino",
TRUE ~ "Unknown or Not Reported Ethnicity")) %>%
select(sex, race, ethnic_cat) %>%
mutate(sex2 = case_when(
.$sex == 1 ~ "Male",
.$sex == 0 ~ "Female",
TRUE ~ "Female")) %>%
select(sex2, race, ethnic_cat) ->
ibd
#first look at tabyl
ibd %>%
tabyl(race, sex2)
ibd_table <- ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race") %>%
rename('Female.Unknown' = Female,
'Male.Unknown' = Male,
'Female.Not' = Female.y,
'Male.Not' = Male.y,
'Female.Hispanic' = Female.x,
'Male.Hispanic' = Male.x)
# filter to only non-zero categories ---------------------
ibd_table2 <- gather(ibd_table, key= sex.eth, value = count, -race) %>%
separate(sex.eth, into = c('sex', 'ethnicity')) %>%
filter(count != 0)
#results in 17 rows
l <- list(race =
c("White",
"Black or African-American",
"Asian",
"Native Hawaiian or Other Pacific Islander",
"American Indian or Alaska Native",
"More Than One Race",
"Unknown or Not Reported"),
sex = c("Male",
"Female",
"Unknown or Not Reported Sex",
"Male",
"Female",
"Male",
"Female"),
ethnicity = c("Hispanic",
"Not",
"Unknown",
"Hispanic",
"Not",
"Hispanic",
"Not"),
count = rep(0,7))
empty_table <- as_tibble(l) %>%
tidyr::complete(race,
nesting(sex), nesting(ethnicity),fill=list(count = 0))
# anti-join ibd_table2 ----------------------------------------------------
# now anti-join ibd_table2 with empty_table to get missing rows
# with no counts in our sample
complement <- anti_join(empty_table, ibd_table2, by = c('race', 'sex', "ethnicity")) %>%
print(n=Inf)
# now combine complement with ibd_table2
full_table <- bind_rows(ibd_table2, complement)
# take full table, unite, then spread
# will need to nest sex within ethnicity
# three cols - race, eth.sex, count
# then spread to 11 cols
ibd_table <- full_table %>%
unite(col = "eth.sex", c('ethnicity', "sex"), sep=".") %>% # three cols - race, eth.sex, count
spread(key = eth.sex, value = count)  # now spread to 10 cols
# convert race col to rownames to make numbers into a matrix
m <- as.matrix(ibd_table[ ,-1])
rownames(m) <- ibd_table$race
ibd_table2 <- addmargins(m, FUN=c(Total=sum), quiet = T)
ibd_table <- rownames_to_column(as.data.frame(ibd_table2), "Racial Categories")
# now 11 cols with total
#arrange without total
ibd_table3 <- ibd_table[1:7,] %>% arrange(`Racial Categories`)
ibd_table <- as.data.frame(rbind(ibd_table3, ibd_table[8,]))
# and write to excel
write_xlsx(ibd_table, here("ibd_table.xlsx"))
# make flextable ----------------------------------------------------------
myft <- ibd_table %>%
regulartable() %>%
theme_booktabs() %>%
set_formatter_type(fmt_double = "%0.0f") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Hispanic or Latino",
Hispanic.Male = "Hispanic or Latino",
`Hispanic.Unknown or Not Reported Sex` = "Hispanic or Latino",
Not.Female = "Not Hispanic or Latino",
Not.Male = "Not Hispanic or Latino",
`Not.Unknown or Not Reported Sex` = "Not Hispanic or Latino",
Unknown.Female = "Unknown/Not Reported",
Unknown.Male = "Unknown/Not Reported",
`Unknown.Unknown or Not Reported Sex` = "Unknown/Not Reported",
Total = "Total") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Ethnic Categories Divided by Sex",
Hispanic.Male = "Ethnic Categories Divided by Sex",
`Hispanic.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Not.Female = "Ethnic Categories Divided by Sex",
Not.Male = "Ethnic Categories Divided by Sex",
`Not.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Unknown.Female = "Ethnic Categories Divided by Sex",
Unknown.Male = "Ethnic Categories Divided by Sex",
`Unknown.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Total = "Total") %>%
set_header_labels(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Female",
Hispanic.Male = "Male",
`Hispanic.Unknown or Not Reported Sex` = "Unknown",
Not.Female = "Female",
Not.Male = "Male",
`Not.Unknown or Not Reported Sex` = "Unknown",
Unknown.Female = "Female",
Unknown.Male = "Male",
`Unknown.Unknown or Not Reported Sex` = "Unknown",
Total = "Total") %>%
font(fontname = "Arial") %>%
fontsize(size = 10) %>%
fontsize(size=12, part="header") %>%
merge_h(part= "header") %>%
merge_v(part= "header") %>%
align(align = "center", part = "all") %>%
width(j = 1, width = 2.0)
myft
doc <- flextable::read_docx()
doc <- body_add_flextable(doc, value = myft)
print(doc, target = "/Users/peterhiggins/Documents/Rcode/nih_enrollment_table/word_table.docx")
doc <- read_docx()
library(officer)
doc <- read_docx()
doc <- body_add_flextable(doc, value = myft)
print(doc, target = "/Users/peterhiggins/Documents/Rcode/nih_enrollment_table/word_table.docx")
ppt <- read_pptx()
ppt <- add_slide(ppt, layout = "Title and Content",
master = "Office Theme")
ppt <- ph_with_flextable(ppt, value = myft, type= "body")
print(ppt, target = "/Users/peterhiggins/Documents/Rcode/nih_enrollment_table/ppt_slide.pptx")
sessionInfo()
ppt <- read_pptx()
