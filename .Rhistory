.$sex == 1 ~ "Male",
.$sex == 0 ~ "Female",
TRUE ~ "Female")) %>%
select(sex2, race, ethnic_cat) ->
ibd
# create table of counts ----------------------------------------------
#first look at tabyl
ibd %>%
tabyl(race, sex2)
ibd_table <- ibd %>%
tabyl(race, sex2, ethnic_cat) %>%
reduce(left_join, by = "race") %>%
rename('Female.Unknown' = Female,
'Male.Unknown' = Male,
'Female.Not' = Female.y,
'Male.Not' = Male.y,
'Female.Hispanic' = Female.x,
'Male.Hispanic' = Male.x)
# filter to only non-zero categories ---------------------
ibd_table2 <- gather(ibd_table, key= sex.eth, value = count, -race) %>%
separate(sex.eth, into = c('sex', 'ethnicity')) %>%
filter(count != 0)
#results in 17 rows
#  create empty table -----------------------------------------------------
l <- list(race =
c("White",
"Black or African-American",
"Asian",
"Native Hawaiian or Other Pacific Islander",
"American Indian or Alaska Native",
"More Than One Race",
"Unknown or Not Reported"),
sex = c("Male",
"Female",
"Unknown or Not Reported Sex",
"Male",
"Female",
"Male",
"Female"),
ethnicity = c("Hispanic",
"Not",
"Unknown",
"Hispanic",
"Not",
"Hispanic",
"Not"),
count = rep(0,7))
empty_table <- as_tibble(l) %>%
tidyr::complete(race,
nesting(sex), nesting(ethnicity),fill=list(count = 0))
# anti-join ibd_table2 ----------------------------------------------------
# now anti-join ibd_table2 with empty_table to get missing rows
# with no counts in our sample
complement <- anti_join(empty_table, ibd_table2, by = c('race', 'sex', "ethnicity")) %>%
print(n=Inf)
# now combine complement with ibd_table2
full_table <- bind_rows(ibd_table2, complement)
# wrangle nested sex within ethnicity -------------------------------------
# take full table, unite, then spread
# will need to nest sex within ethnicity
# three cols - race, eth.sex, count
# then spread to 11 cols
ibd_table <- full_table %>%
unite(col = "eth.sex", c('ethnicity', "sex"), sep=".") %>% # three cols - race, eth.sex, count
spread(key = eth.sex, value = count)  # now spread to 10 cols
# add margin totals -------------------------------------------------------
# convert race col to rownames to make numbers into a matrix
m <- as.matrix(ibd_table[ ,-1])
rownames(m) <- ibd_table$race
ibd_table2 <- addmargins(m, FUN=c(Total=sum), quiet = T)
ibd_table <- rownames_to_column(as.data.frame(ibd_table2), "Racial Categories")
# now 11 cols with total
#arrange without total
ibd_table3 <- ibd_table[1:7,] %>% arrange(`Racial Categories`)
ibd_table <- as.data.frame(rbind(ibd_table3, ibd_table[8,]))
# and write to excel
write_xlsx(ibd_table, here("ibd_table.xlsx"))
# make flextable ----------------------------------------------------------
myft <- ibd_table %>%
regulartable() %>%
theme_booktabs() %>%
set_formatter_type(fmt_double = "%0.0f") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Hispanic or Latino",
Hispanic.Male = "Hispanic or Latino",
`Hispanic.Unknown or Not Reported Sex` = "Hispanic or Latino",
Not.Female = "Not Hispanic or Latino",
Not.Male = "Not Hispanic or Latino",
`Not.Unknown or Not Reported Sex` = "Not Hispanic or Latino",
Unknown.Female = "Unknown/Not Reported",
Unknown.Male = "Unknown/Not Reported",
`Unknown.Unknown or Not Reported Sex` = "Unknown/Not Reported",
Total = "Total") %>%
add_header(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Ethnic Categories Divided by Sex",
Hispanic.Male = "Ethnic Categories Divided by Sex",
`Hispanic.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Not.Female = "Ethnic Categories Divided by Sex",
Not.Male = "Ethnic Categories Divided by Sex",
`Not.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Unknown.Female = "Ethnic Categories Divided by Sex",
Unknown.Male = "Ethnic Categories Divided by Sex",
`Unknown.Unknown or Not Reported Sex` = "Ethnic Categories Divided by Sex",
Total = "Total") %>%
set_header_labels(`Racial Categories` = "Racial Categories",
Hispanic.Female = "Female",
Hispanic.Male = "Male",
`Hispanic.Unknown or Not Reported Sex` = "Unknown",
Not.Female = "Female",
Not.Male = "Male",
`Not.Unknown or Not Reported Sex` = "Unknown",
Unknown.Female = "Female",
Unknown.Male = "Male",
`Unknown.Unknown or Not Reported Sex` = "Unknown",
Total = "Total") %>%
font(fontname = "Arial") %>%
fontsize(size = 10) %>%
fontsize(size=12, part="header") %>%
merge_h(part= "header") %>%
merge_v(part= "header") %>%
align(align = "center", part = "all") %>%
width(j = 1, width = 2.0)
myft
a <- 3
b <-4
glue({a} {b})
glue(a b)
library(glue)
glue::glue(a)
glue::glue(ab)
glue::glue(a b)
glue::glue(a,b)
glue(a,b)
glue("Walter Payton was "a,b)
glue("Walter Payton was ",a,b)
sample(2:9)
sample(2:9,1)
sample(2:9,1)
sample(2:9,1)
sample(2:9,1)
sample(2:9,1)
sample(2:9,1)
sample(2:9,1)
rep(sample(2:9,1), 10)
glue(rep(sample(2:9,1), 10))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
glue(collapse(rep(sample(2:9,1), 10)))
rep(sample(2:9,1), 10)
rep(sample(2:9,1), 10)
rep(sample(2:9,1), 10)
sample(2:9,10)
sample(2:9,10, replace = TRUE)
collapse(sample(2:9,10, replace = TRUE))
for(1 in 1 to 500){collapse(sample(2:9,10, replace = TRUE))}
for(i in 1 to 500){collapse(sample(2:9,10, replace = TRUE))}
for(i in 1:500){collapse(sample(2:9,10, replace = TRUE))}
for(i in 1:500){print(2)}
for(i in 1:500){print(collapse(sample(2:9,10, replace = TRUE)))}
phone <- for(i in 1:500){print(collapse(sample(2:9,10, replace = TRUE)))}
phone <- as.vector(for(i in 1:500){print(collapse(sample(2:9,10, replace = TRUE)))})
phone <- as.vector(for(i in 1:500){collapse(sample(2:9,10, replace = TRUE))})
phone
collapse(sample(2:9,10, replace = TRUE))
for(i in 1:500){collapse(sample(2:9,10, replace = TRUE))}
for(i in 1:500){phone[i] <- collapse(sample(2:9,10, replace = TRUE))}
phone
# set up for open Oklahoma REDCap fake database
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_data <- exportRecords(ok_rcon)
library(magrittr)
library(tidyverse)
library(keyring)
library(REDCapR)
library(redcapAPI)
library(readxl)
library(writexl)
# set up for open Oklahoma REDCap fake database
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_data <- exportRecords(ok_rcon)
View(ok_data)
library(redcapAPI)
mydata <- exportRecords(ok_rcon)
mydata <- exportRecords(rcon, fields = c("record_id",
"name_first","name_last","address", "telephone", "email",
"dob", "age"))
View(mydata)
styler:::style_selection()
library(REDCapR)
df <- redcap_read(
redcap_uri = train_url,
token = train_token
)$data
train_url <- 'https://redcap-t-a.umms.med.umich.edu/api/'
train_token <- "1C4CCB1234A55E711EDF57B0D8E24F01"
train_rcon <- redcapConnection(train_url, train_token)
train_data <- exportRecords(train_rcon)
View(train_data)
View(train_data)
head(train_data)
library(REDCapR)
df <- redcap_read(
redcap_uri = train_url,
token = train_token
)$data
View(df)
?redcap_read
df <- redcap_read(
redcap_uri = train_url,
token = train_token, fields = c(race, ethnicity, sex)
)$data
df <- redcap_read(
redcap_uri = train_url,
token = train_token, fields = c('race', 'ethnicity', 'sex')
)$data
prod_url <- 'https://redcap-p-a.umms.med.umich.edu/api/'
prod_token <- keyring::key_get(
service = "REDCap IBD Database API Token",
username = "REDCap IBD Database API Token")
prod_rcon <- redcapConnection(prod_url, prod_token)
df <- redcap_read(
redcap_uri = prod_url,
token = prod_token
)$data
View(df)
styler:::style_selection()
library(REDCapR)
ok_df <- redcap_read(
redcap_uri = ok_url,
token = ok_token
)$data
View(ok_df)
# test redcapAPI with Oklahoma setup
library(redcapAPI)
mydata <- exportRecords(ok_rcon)
mydata <- exportRecords(rcon, fields = c("record_id",
"name_first","name_last","address", "telephone", "email",
"dob", "age"))
mydata <- exportRecords(ok_rcon)
View(mydata)
mydata <- exportRecords(ok_rcon, fields = c("record_id",
"name_first","name_last","address", "telephone", "email",
"dob", "age"))
View(mydata)
styler:::style_selection()
prod_url <- 'https://redcap-p-a.umms.med.umich.edu/api/'
prod_token <- keyring::key_get(
service = "REDCap IBD Database API Token",
username = "REDCap IBD Database API Token")
prod_rcon <- redcapConnection(prod_url, prod_token)
prod_data <- exportRecords(prod_rcon, fields = c(
"record_id",
"name_first", "name_last", "address", "telephone", "email",
"dob", "age"
))
prod_df <- redcap_read(
redcap_uri = prod_url,
token = prod_token
)$data
prod_data <- exportRecords(prod_rcon, fields = c(
"subject_id",
"first_name", "last_name", "address_1", "telephone_1", "email",
"birthdate", "gi_dr"
))
View(prod_data)
train_data <- exportRecords(train_rcon, fields = c(
"record_id",
"first_name", "last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex", "height", "weight"
))
View(train_data)
train_df <- redcap_read(
redcap_uri = train_url,
token = train_token,
fields = c('race', 'ethnicity', 'sex')
)$data
View(train_df)
train_url <- 'https://redcap-t-a.umms.med.umich.edu/api/'
train_token <- "1C4CCB1234A55E711EDF57B0D8E24F01"
train_rcon <- redcapConnection(train_url, train_token)
train_data <- exportRecords(train_rcon, fields = c(
"record_id",
"first_name", "last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex", "height", "weight"
))
View(prod_data)
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_data <- exportRecords(ok_rcon)
View(ok_data)
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_data <- exportRecords(ok_rcon)$data
View(ok_df)
ok_data <- exportRecords(ok_rconfields = c(
"record_id",
"first_name", "last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex", "height", "weight"
))
styler:::style_selection()
ok_data <- exportRecords(ok_rcon,
fields = c(
"record_id", "first_name",
"last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex",
"height", "weight", "bmi"
)
)
ok_data <- exportRecords(ok_rcon,
fields = c(
"record_id", "name_first",
"name_last", "address", "telephone", "email",
"dob", "age", "sex",
"height", "weight", "bmi"
))
View(ok_data)
View(ok_data)
View(ok_df)
View(ok_data)
? exportRecords
ok_data <- exportRecords(ok_rcon,
fields = c(
"record_id", "name_first",
"name_last", "address", "telephone", "email",
"dob", "age", "sex",
"height", "weight", "bmi"),
factors = TRUE,
labels = TRUE)
)
# set up for open Oklahoma REDCap fake database
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_data <- exportRecords(ok_rcon,
fields = c(
"record_id", "name_first",
"name_last", "address", "telephone", "email",
"dob", "age", "sex",
"height", "weight", "bmi"),
factors = TRUE,
labels = TRUE)
View(ok_data)
View(ok_data)
ok_data <- exportRecords(ok_rcon,
factors = TRUE,
labels = TRUE)
View(ok_data)
View(ok_df)
train_url <- 'https://redcap-t-a.umms.med.umich.edu/api/'
train_token <- "1C4CCB1234A55E711EDF57B0D8E24F01"
train_rcon <- redcapConnection(train_url, train_token)
train_data <- exportRecords(train_rcon, fields = c(
"record_id",
"first_name", "last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex", "height", "weight"
))
View(train_data)
class(train_data)
head(train_data)
train_data <- exportRecords(train_rcon, fields = c(
"record_id",
"first_name", "last_name", "address", "telephone", "email",
"dob", "age", "ethnicity", "race", "sex", "height", "weight"),
factors = TRUE)
head(train_data)
main_post <- httr::POST(
url = ok_url,
body = list(
token = ok_token,
content = "record",
format = "csv",
rawOrLabel = "label",
exportCheckboxLabel = TRUE)
)
main_df <- post_to_df(main_post)
library(magrittr)
library(tidyverse)
library(keyring)
library(REDCapR)
library(redcapAPI)
library(readxl)
library(writexl)
train_url <- 'https://redcap-t-a.umms.med.umich.edu/api/'
train_token <- "1C4CCB1234A55E711EDF57B0D8E24F01"
train_rcon <- redcapConnection(train_url, train_token)
#all fields
train_df <- redcap_read(
redcap_uri = train_url,
token = train_token
)$data
train_df <- redcap_read(
redcap_uri = train_url,
token = train_token
)$data
View(train_df)
ok_url   <- "https://bbmc.ouhsc.edu/redcap/api/"
ok_token <- "9A81268476645C4E5F03428B8AC3AA7B"
ok_rcon <- redcapConnection(ok_url, ok_token)
ok_df <- redcap_read(
redcap_uri = ok_url,
token = ok_token
)$data
View(train_rcon)
View(ok_df)
View(train_df)
View(train_df)
library(arsenal)
library(knitr)
library(survival)
data(mockstudy)
dim(mockstudy)
glimpse(mockstudy)
install.packages('arsenal')
library(arsenal)
library(knitr)
library(survival)
data(mockstudy)
dim(mockstudy)
glimpse(mockstudy)
library(tidyverse)
View(train_df)
tab1 <- tableby(arm ~ sex + age, data = mockstudy)
View(tab1)
View(tab1)
summary(tab1, text=TRUE)
tab.noby <- tableby(~ bmi + sex +age, data = mockstudy)
summary(tab.noby)
myvars <- names(mockstudy)
rhs <- paste(myvars[8:10], collapse = '+')
rhs
myvars
rhs
as.formula(paste('arm ~', RHS))
summary(tableby(as.formula(paste('arm ~', RHS)), data=mockstudy))
myvars <- names(mockstudy)
rhs <- paste(myvars[8:10], collapse = '+')
rhs
as.formula(paste('arm ~', rhs))
summary(tableby(as.formula(paste('arm ~', rhs)), data=mockstudy))
names(mockstudy)
summary(tableby(arm ~ sex + fu.time, data=mockstudy), digits=4, digits.p =2, digits.pct =1)
get_wd()
getwd()
write2word(tab1, 'data', title= 'table 1 in word')
write2word(tab1, here, title= 'table 1 in word')
library(here)
write2word(tab1, here, title= 'table 1 in word')
write2word(tab1, path='here', title= 'table 1 in word')
??write2word
write2word(tab1, file = 'table 1 in word')
write2word(tab1, file = 'table1.docx')
View(train_df)
train_df$arm <- c(rep(1,250), rep(2, 250))
View(train_df)
rhs <- paste(names(train_df[8:14]), collapse = '+')
rhs
train_df$arm <- c(rep(1,250), rep(2, 250))
rhs <- paste(names(train_df[8:14]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df))
tab2
write2word(tab2, file = 'table1.docx')
train_df$arm <- c(rep(1,250), rep(2, 250))
rhs <- paste(names(train_df[8:14]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df))
tab2
write2word(tab2, file = 'table1.docx')
write2word(tab2, file = 'table2.docx')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), pfootnote=TRUE, data=train_df))
tab2
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df), pfootnote=TRUE)
tab2
train_df$arm <- c(rep(1,250), rep(2, 250))
train_df$race<- as.factor(train_df$race)
rhs <- paste(names(train_df[8:14]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df), pfootnote=TRUE)
tab2
write2html(tab1, "~/table2.html")
write2html(tab2, "~/table3.html")
train_df$arm <- c(rep(1,250), rep(2, 250))
train_df$race<- as.factor(train_df$race)
rhs <- paste(names(train_df[8:14]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df), pfootnote=TRUE)
tab2
write2word(tab2, file = 'table3.docx')
train_df[8:14]
train_df[1,8:14]
names(train_df[8:14])
paste(names(train_df[8:14]), collapse = '+')
paste(names(train_df[8:14]), collapse = ' ')
rhs <- paste(names(train_df[8:14]), collapse = '+')
rhs
rhs <- paste(names(train_df[c(8,11,14)]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df), pfootnote=TRUE)
tab2
rhs <- paste(names(train_df[c(8,12,14)]), collapse = '+')
tab2 <- summary(tableby(as.formula(paste('arm ~', rhs)), data=train_df), pfootnote=TRUE)
tab2
View(ok_df)
View(ok_df)
View(ok_df)
